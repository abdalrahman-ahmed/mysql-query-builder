{"version":3,"sources":["src/index.js"],"names":[],"mappings":"AAAA;;;;;;;;AAEA,IAAM,gBAAgB,IAAtB;;AAEA,IAAM,cAAc,QAApB;AACA,IAAM,cAAc,QAApB;AACA,IAAM,cAAc,QAApB;AACA,IAAM,cAAc,QAApB;;IAEM,iB;AACJ,6BAAY,YAAZ,EAA0B;AAAA;;AACxB,SAAK,aAAL,GAAqB,YAArB;;AAEA,SAAK,MAAL,GAAc,IAAd;AACA,SAAK,UAAL,GAAkB,IAAlB;AACA,SAAK,OAAL,GAAe,IAAf;AACA,SAAK,OAAL,GAAe,IAAf;AACA,SAAK,MAAL,GAAc,EAAd;AACA,SAAK,KAAL,GAAa,IAAb;;AAEA,SAAK,KAAL,GAAa,EAAb;AACA,SAAK,MAAL,GAAc,IAAd;AACA,SAAK,QAAL,GAAgB,IAAhB;AACA,SAAK,QAAL,GAAgB,IAAhB;;AAEA,SAAK,OAAL,GAAe,IAAf;AACA,SAAK,OAAL,GAAe,EAAf;AACD;;;;;;;;;;;;;;kBAEM;AAAA;;AACL,UAAG,KAAK,YAAL,IAAqB,IAAxB,EAA6B;AAC3B,eAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACtC,gBAAK,YAAL,CAAkB,KAAlB,CAAwB,KAAxB,EAA+B,UAAC,KAAD,EAAQ,IAAR,EAAc,MAAd,EAAyB;AACtD,gBAAI,KAAJ,EAAW;AACT,qBAAO,OAAO,KAAP,CAAP;AACD;AACD,oBAAQ,IAAR;AACD,WALD;AAMD,SAPM,CAAP;AAQD;AACF,K;;;gCAEW;AACV,aAAO,KAAK,OAAL,CAAa,KAApB;AACD;;;iCAEY;AACX,aAAO,KAAK,OAAZ;AACD;;;6BAEQ,K,EAAM;AACb,WAAK,MAAL,GAAc,KAAd;AACA,aAAO,IAAP;AACD;;;6BACqB;AAAA,UAAf,MAAe,yDAAN,IAAM;;AACpB,WAAK,UAAL,GAAkB,WAAlB;AACA,WAAK,OAAL,GAAe,MAAf;AACA,aAAO,IAAP;AACD;;;2BAEM,K,EAAO,M,EAAQ,I,EAAK;AACzB,WAAK,MAAL,GAAc,KAAd;AACA,WAAK,UAAL,GAAkB,WAAlB;AACA,WAAK,OAAL,GAAe,MAAf;;AAEA,UAAG,SAAS,SAAZ,EAAsB;AACpB,aAAK,OAAL,GAAe,OAAO,IAAP,CAAY,MAAZ,CAAf;AACA,eAAO,MAAP;AACD;AACD,WAAK,OAAL,GAAe,IAAf;AACA,aAAO,IAAP;AACD;;;6BAEO;AACN,WAAK,UAAL,GAAkB,WAAlB;;AAEA,UAAG,UAAU,MAAV,IAAoB,CAAvB,EAAyB;AACvB,aAAK,QAAL,CAAc,UAAU,CAAV,CAAd;AACA,aAAK,OAAL,GAAe,UAAU,CAAV,CAAf;AACA,eAAO,IAAP;AACD;AACD,WAAK,OAAL,GAAe,UAAU,CAAV,CAAf;AACA,aAAO,IAAP;AACD;;;4BACM,K,EAAM;AACX,WAAK,UAAL,GAAkB,WAAlB;;AAEA,UAAG,UAAU,MAAV,KAAqB,CAAxB,EAA0B;AACxB,aAAK,QAAL,CAAc,UAAU,CAAV,CAAd;AACA,aAAK,MAAL,GAAc,UAAU,CAAV,CAAd;AACA,eAAO,IAAP;AACD;AACD,UAAG,UAAU,MAAV,KAAqB,CAAxB,EAA0B;AACxB,aAAK,QAAL,CAAc,UAAU,CAAV,CAAd;AACD;AACD,aAAO,IAAP;AACD;;;yBAEI,K,EAAM;AACT,WAAK,QAAL,CAAc,KAAd;AACA,aAAO,IAAP;AACD;;;0BAEK,G,EAAK,K,EAAO;AAChB,UAAI,QAAO,GAAP,yCAAO,GAAP,OAAe,QAAnB,EAA6B;AAC3B,eAAO,KAAK,WAAL,CAAiB,GAAjB,CAAP;AACD;AACD,WAAK,MAAL,CAAY,IAAZ,CAAiB;AACf,aAAK,GADU;AAEf,eAAO,KAFQ;AAGf,YAAI;AAHW,OAAjB;AAKA,aAAO,IAAP;AACD;;;gCAEW,M,EAAQ;AAClB,WAAK,IAAI,GAAT,IAAgB,MAAhB,EAAwB;AACtB,YAAI,CAAC,OAAO,cAAP,CAAsB,GAAtB,CAAL,EAAiC;AAC/B;AACD;AACD,YAAI,QAAQ,OAAO,GAAP,CAAZ;AACA,aAAK,MAAL,CAAY,IAAZ,CAAiB;AACf,eAAK,GADU;AAEf,iBAAO,KAFQ;AAGf,cAAI;AAHW,SAAjB;AAKD;AACD,aAAO,IAAP;AACD;;;4BAEO,G,EAAK,K,EAAO;AAClB,WAAK,MAAL,CAAY,IAAZ,CAAiB;AACf,aAAI,GADW;AAEf,eAAO,KAFQ;AAGf,YAAI;AAHW,OAAjB;AAKA,aAAO,IAAP;AACD;;;yBAEI,K,EAAO,K,EAAO,I,EAAkB;AAAA,UAAZ,EAAY,yDAAP,KAAO;;AACnC,WAAK,KAAL,CAAW,IAAX,CAAgB;AACd,eAAO,KADO;AAEd,eAAO,KAFO;AAGd,cAAM,IAHQ;AAId,YAAI;AAJU,OAAhB;AAMA,aAAO,IAAP;AACD;;;2BAEM,K,EAAO,K,EAAO,I,EAAM;AACzB,WAAK,IAAL,CAAU,KAAV,EAAiB,KAAjB,EAAwB,IAAxB,EAA8B,IAA9B;AACA,aAAO,IAAP;AACD;;;yBAEI,K,EAAO,E,EAAe;AAAA,UAAX,IAAW,yDAAJ,EAAI;;AACzB,WAAK,KAAL,CAAW,IAAX,CAAgB;AACd,eAAO,KADO;AAEd,YAAI,EAFU;AAGd,cAAM,KAAK,WAAL,CAAiB,IAAjB;AAHQ,OAAhB;AAKA,aAAO,IAAP;AACD;;;0BAEK,K,EAAO,M,EAAO;AAClB,WAAK,MAAL,GAAc,CAAC,KAAD,EAAQ,MAAR,CAAd;AACA,aAAO,IAAP;AACD;;;4BAEO,W,EAA4B;AAAA,UAAf,KAAe,yDAAP,KAAO;;AAClC,WAAK,QAAL,GAAgB,CAAC,WAAD,EAAc,KAAd,CAAhB;AACA,aAAO,IAAP;AACD;;;4BAEO,M,EAAQ;AACd,WAAK,QAAL,GAAgB,MAAhB;AACA,aAAO,IAAP;AACD;;;uCAEkB;AACjB,UAAI,UAAU,OAAO,IAAP,CAAY,KAAK,OAAjB,CAAd;AACA,UAAI,eAAe,OAAnB;AACA,WAAK,OAAL,CAAa,YAAb,EAA2B,QAA3B,GAAsC,CAAtC;AACA,aAAO,KAAK,SAAL,EAAP;AACD;;;4BAEO;AACN,UAAG,KAAK,UAAL,KAAoB,WAAvB,EAAmC;AACjC,eAAO,KAAK,cAAL,EAAP;AACD;;AAED,UAAG,KAAK,UAAL,KAAoB,WAAvB,EAAmC;AACjC,eAAO,KAAK,cAAL,EAAP;AACD;;AAED,UAAG,KAAK,UAAL,KAAoB,WAAvB,EAAmC;AACjC,eAAO,KAAK,cAAL,EAAP;AACD;;AAED,UAAG,KAAK,UAAL,KAAoB,WAAvB,EAAmC;AACjC,eAAO,KAAK,cAAL,EAAP;AACD;;AAED,aAAO,MAAM,6BAAN,CAAP;AACD;;;+BAEU,G,EAAI;AACb,aAAO,GAAP;;AAEA,WAAK,QAAL,CAAc,GAAd;AACA,WAAK,gBAAL;AACA,aAAO,GAAP;AACD;;;qCAEe;AAAA;;AACd,UAAM,OAAO,KAAK,OAAL,CAAa,GAAb,CAAkB;AAAA,eAAS,MAAM,GAAN,GAAY,GAArB;AAAA,OAAlB,EAA+C,IAA/C,CAAoD,GAApD,CAAb;AACA,UAAM,SAAS,KAAK,OAAL,CAAa,GAAb,CAAkB;AAAA,eAAS,OAAO,OAAK,OAAL,CAAa,GAAb,CAAP,GAA2B,IAApC;AAAA,OAAlB,EAA+D,IAA/D,CAAoE,GAApE,CAAf;AACA,UAAI,MAAM,iBAAiB,KAAK,MAAtB,GAA+B,GAA/B,GAAqC,IAArC,GAA4C,YAA5C,GAA2D,MAA3D,GAAoE,GAA9E;AACA,aAAO,KAAK,UAAL,CAAgB,GAAhB,CAAP;AACD;;;qCAEe;AACd,UAAM,QAAQ,KAAK,UAAL,EAAd;AACA,UAAI,MAAM,YAAY,KAAK,MAAjB,GAA0B,OAApC;AACA,UAAI,OAAO,EAAX;AACA,WAAK,IAAI,GAAT,IAAgB,KAAK,OAArB,EAA6B;AAC3B,YAAI,CAAC,KAAK,OAAL,CAAa,cAAb,CAA4B,GAA5B,CAAL,EAAuC;AACrC;AACD;AACD,aAAK,IAAL,CAAU,MAAM,GAAN,GAAY,MAAZ,GAAqB,KAAK,OAAL,CAAa,GAAb,CAArB,GAAyC,IAAnD;AACD;AACD,aAAO,KAAK,IAAL,CAAU,GAAV,CAAP;AACA,aAAO,YAAY,KAAnB;AACA,aAAO,KAAK,UAAL,CAAgB,GAAhB,CAAP;AACD;;;qCAEe;AACd,UAAI,MAAM,iBAAiB,KAAK,MAAtB,GAA+B,SAA/B,GAA2C,KAAK,UAAL,EAArD;AACA,aAAO,KAAK,UAAL,CAAgB,GAAhB,CAAP;AACD;;;qCAEgB;AACf,UAAI,SAAS,KAAK,aAAL,EAAb;AACA,UAAI,QAAQ,EAAZ;;AAEA,UAAI,KAAK,MAAL,KAAgB,IAAhB,IAAwB,KAAK,KAAL,KAAe,IAA3C,EAAiD;AAC/C,gBAAQ,KAAK,UAAL,KAAoB,KAAK,SAAL,EAA5B;AACA,YAAI,KAAJ,EAAU;AACR,kBAAQ,YAAY,KAApB;AACD;AACF;;AAED,WAAK,UAAL;;AAEA,UAAI,MACF,YAAY,OAAO,MAAnB,GAA4B,GAA5B,GACE,OADF,GACY,OAAO,IADnB,GAEE,KAAK,SAAL,EAFF,GAGE,KAHF,GAIE,KAAK,YAAL,EAJF,GAKE,KAAK,YAAL,EALF,GAME,KAAK,UAAL,EAPJ;;AASA,aAAO,KAAK,UAAL,CAAgB,GAAhB,CAAP;AACD;;;iCAEY;AACX,UAAI,MAAM,EAAV;AACA,UAAI,KAAK,MAAL,CAAY,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B,aAAK,IAAI,CAAT,IAAc,KAAK,MAAnB,EAA2B;AACzB,cAAI,CAAC,KAAK,MAAL,CAAY,cAAZ,CAA2B,CAA3B,CAAL,EAAoC;AAClC;AACD;;AAED,cAAI,aAAa,KAAK,MAAL,CAAY,CAAZ,CAAjB;AACA,cAAI,kBAAkB,EAAtB;;AAEA,cAAI,QAAQ,EAAZ,EAAgB;AACd,gBAAI,WAAW,EAAf,EAAmB;AACjB,qBAAO,MAAP;AACD,aAFD,MAEO;AACL,qBAAO,OAAP;AACD;AACF;;AAED,cAAI,OAAO,GAAX;AACA,cAAI,WAAW,GAAX,CAAe,OAAf,CAAuB,IAAvB,MAAiC,CAAC,CAAtC,EAAyC;AACvC,mBAAO,IAAP;AACA,uBAAW,GAAX,GAAiB,WAAW,GAAX,CAAe,OAAf,CAAuB,IAAvB,EAA6B,EAA7B,EAAiC,IAAjC,EAAjB;AACD;;AAED,cAAI,QAAO,WAAW,KAAlB,MAA4B,QAAhC,EAA0C;AACxC,mBAAO,MAAP;AACA,iBAAK,IAAI,GAAT,IAAgB,WAAW,KAA3B,EAAkC;AAChC,kBAAI,CAAC,KAAK,MAAL,CAAY,cAAZ,CAA2B,CAA3B,CAAL,EAAoC;AAClC;AACD;AACD,kBAAI,QAAQ,WAAW,KAAX,CAAiB,GAAjB,CAAZ;AACA,gCAAkB,KAAlB;AACA,kBAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B,CAE9B,CAFD,MAEO;AACL,2BAAW,KAAX,CAAiB,GAAjB,IAAwB,MAAM,KAAN,GAAc,GAAtC;AACD;AACF;AACD,8BAAkB,MAAM,WAAW,KAAX,CAAiB,IAAjB,CAAsB,GAAtB,CAAN,GAAmC,GAArD;AACD,WAfD,MAeO,IAAI,OAAO,WAAW,KAAlB,KAA4B,QAAhC,EAA0C;AAC/C,8BAAkB,WAAW,KAA7B;AACD,WAFM,MAEA;AACL,8BAAkB,MAAM,WAAW,KAAjB,GAAyB,GAA3C;AACD;;AAED,iBAAO,MAAM,WAAW,GAAjB,GAAuB,GAAvB,GAA6B,IAA7B,GAAoC,eAA3C;AACD;AACF;;AAED,aAAO,GAAP;AACD;;;gCAEW;AACV,UAAI,MAAM,EAAV;AACA,UAAI,KAAK,KAAT,EAAgB;AACd,aAAK,IAAI,CAAT,IAAc,KAAK,KAAnB,EAA0B;AACxB,cAAI,CAAC,KAAK,MAAL,CAAY,cAAZ,CAA2B,CAA3B,CAAL,EAAoC;AAClC;AACD;AACD,cAAI,aAAa,KAAK,KAAL,CAAW,CAAX,CAAjB;;AAEA,cAAI,QAAQ,EAAZ,EAAgB;AACd,gBAAI,WAAW,EAAf,EAAmB;AACjB,qBAAO,MAAP;AACD,aAFD,MAEO;AACL,qBAAO,OAAP;AACD;AACF;AACD,cAAI,QAAQ,EAAZ;AACA,cAAI,WAAW,IAAX,KAAoB,QAApB,IAAgC,WAAW,IAAX,KAAoB,MAAxD,EAAgE;AAC9D,oBAAQ,GAAR;AACD;AACD,mBAAS,WAAW,KAApB;;AAEA,cAAI,WAAW,IAAX,KAAoB,OAApB,IAA+B,WAAW,IAAX,KAAoB,MAAvD,EAA+D;AAC7D,qBAAS,GAAT;AACD;;AAED,iBAAO,iCAAiC,KAAjC,GAAyC,GAAhD;AACD;AACD,YAAI,KAAK,MAAT,EAAiB;AACf,gBAAM,UAAU,GAAhB;AACD;AACF;;AAED,aAAO,GAAP;AACD;;;gCAEW;AACV,UAAI,MAAM,GAAV;AACA,UAAI,KAAK,KAAT,EAAgB;AACd,aAAK,IAAI,CAAT,IAAc,KAAK,KAAnB,EAA0B;AACxB,cAAI,CAAC,KAAK,MAAL,CAAY,cAAZ,CAA2B,CAA3B,CAAL,EAAoC;AAClC;AACD;AACD,cAAI,aAAa,KAAK,KAAL,CAAW,CAAX,CAAjB;AACA,iBAAO,WAAW,IAAX,GACL,QADK,GACM,WAAW,KADjB,GAEL,MAFK,GAEI,WAAW,EAFtB;AAGD;AACF;AACD,aAAO,GAAP;AACD;;;iCAEW;AACV,UAAI,CAAC,KAAK,MAAV,EAAiB;AACf,aAAK,KAAL,CAAW,CAAX,EAAc,aAAd;AACD;AACF;;;iCAEY;AACX,UAAI,KAAK,MAAT,EAAiB;AACf,eAAO,YAAY,KAAK,MAAL,CAAY,CAAZ,CAAZ,GAA6B,IAA7B,GAAoC,KAAK,MAAL,CAAY,CAAZ,CAA3C;AACD;AACD,aAAO,EAAP;AACD;;;mCAEc;AACb,UAAI,KAAK,QAAT,EAAmB;AACjB,eAAO,eAAe,KAAK,QAAL,CAAc,CAAd,CAAf,GAAkC,GAAlC,GAAwC,KAAK,QAAL,CAAc,CAAd,CAA/C;AACD;AACD,aAAO,EAAP;AACD;;;mCAEc;AACb,UAAI,KAAK,QAAT,EAAmB;AACjB,eAAO,eAAe,KAAK,QAA3B;AACD;AACD,aAAO,EAAP;AACD;;;oCAEe;AACd,UAAI,OAAO,KAAK,MAAhB;AACA,UAAI,CAAC,IAAL,EAAW;AACT,cAAM,MAAM,2BAAN,CAAN;AACD;;AAED,UAAI,SAAS,KAAK,OAAlB;AACA,UAAI,WAAW,IAAf,EAAqB;AACnB,iBAAS,KAAK,cAAL,CAAoB,IAApB,CAAT;AACD;AACD,UAAI,OAAO,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,iBAAS,OAAO,IAAP,CAAY,GAAZ,CAAT;AACD;AACD,aAAO;AACL,cAAM,IADD;AAEL,gBAAQ,MAFH;AAGL,eAAO,KAAK,MAHP;AAIL,cAAM,KAAK;AAJN,OAAP;AAMD;;;mCAEc,K,EAAO;AACpB,UAAI,WAAW,MAAM,KAAN,CAAY,IAAZ,CAAf;AACA,UAAI,SAAU,SAAS,CAAT,CAAD,GAAgB,SAAS,CAAT,CAAhB,GAA8B,SAAS,CAAT,CAA3C;AACA,WAAK,OAAL,GAAe,CAAC,SAAS,IAAV,CAAf;AACA,aAAO,KAAK,OAAZ;AACD;;;iCAEY;AACX,aAAO,KAAK,OAAZ;AACD;;;+BAEU,O,EAAS;AAClB,WAAK,OAAL,GAAe,OAAf;AACA,aAAO,IAAP;AACD;;;6BAEQ,G,EAAuB;AAAA,UAAlB,QAAkB,yDAAP,KAAO;;AAC9B,WAAK,OAAL,CAAa,IAAb,CAAkB;AAChB,eAAO,GADS,EACJ,UAAU,QADN,EACgB,WAAW;AAD3B,OAAlB;AAGD;;;uCAEkB;AACjB,WAAK,MAAL,GAAc,EAAd;AACA,WAAK,MAAL,GAAc,IAAd;AACA,WAAK,KAAL,GAAa,EAAb;AACA,WAAK,OAAL,GAAe,IAAf;AACA,WAAK,OAAL,GAAe,IAAf;AACA,WAAK,QAAL,GAAgB,IAAhB;AACA,WAAK,QAAL,GAAgB,IAAhB;AACA,WAAK,UAAL,GAAkB,IAAlB;AACA,WAAK,MAAL,GAAc,IAAd;AACA,WAAK,KAAL,GAAa,IAAb;AACD;;;;;;AAGH,OAAO,OAAP,GAAiB,IAAI,iBAAJ,EAAjB","file":"index.js","sourcesContent":["\"use strict\";\n\nconst DEFAULT_LIMIT = 1000;\n\nconst TYPE_SELECT = 'select';\nconst TYPE_INSERT = 'insert';\nconst TYPE_UPDATE = 'update';\nconst TYPE_DELETE = 'delete';\n\nclass MySQLQueryBuilder {\n  constructor(dbConnection) {\n    this._dbConnection = dbConnection;\n\n    this._table = null;\n    this._queryType = null;\n    this._fields = null;\n    this._values = null;\n    this._where = [];\n    this._like = null;\n\n    this._join = [];\n    this._limit = null;\n    this._orderBy = null;\n    this._groupBy = null;\n\n    this.dbQuery = null;\n    this.queries = [];\n  }\n\n  query(){\n    if(this.dbConnection != null){\n      return new Promise((resolve, reject) => {\n        this.dbConnection.query(query, (error, rows, fields) => {\n          if (error) {\n            return reject(error);\n          }\n          resolve(rows);\n        });\n      })\n    }\n  }\n\n  lastQuery() {\n    return this.queries.query;\n  }\n\n  getQueries() {\n    return this.queries;\n  }\n\n  setTable(table){\n    this._table = table;\n    return this;\n  }\n  select(fields = null) {\n    this._queryType = TYPE_SELECT;\n    this._fields = fields;\n    return this;\n  }\n\n  insert(table, fields, data){\n    this._table = table;\n    this._queryType = TYPE_INSERT;\n    this._fields = fields;\n\n    if(data === undefined){\n      this._fields = Object.keys(fields);\n      data = fields;\n    }\n    this._values = data;\n    return this;\n  }\n\n  update(){\n    this._queryType = TYPE_UPDATE;\n\n    if(arguments.length == 2){\n      this.setTable(arguments[0]);\n      this._values = arguments[1];\n      return this;\n    }\n    this._values = arguments[0];\n    return this;\n  }\n  delete(table){\n    this._queryType = TYPE_DELETE;\n\n    if(arguments.length === 2){\n      this.setTable(arguments[0]);\n      this._where = arguments[1];\n      return this;\n    }\n    if(arguments.length === 1){\n      this.setTable(arguments[0]);\n    }\n    return this;\n  }\n\n  from(from) {\n    this.setTable(from);\n    return this;\n  }\n\n  where(key, value) {\n    if (typeof key === 'object') {\n      return this.whereObject(key);\n    }\n    this._where.push({\n      key: key,\n      value: value,\n      or: false\n    });\n    return this;\n  }\n\n  whereObject(object) {\n    for (var key in object) {\n      if (!object.hasOwnProperty(key)) {\n        continue;\n      }\n      let value = object[key];\n      this._where.push({\n        key: key,\n        value: value,\n        or: false\n      });\n    }\n    return this;\n  }\n\n  whereOR(key, value) {\n    this._where.push({\n      key:key,\n      value: value,\n      or: true\n    });\n    return this;\n  }\n\n  like(field, query, type, or = false) {\n    this._like.push({\n      field: field,\n      query: query,\n      type: type,\n      or: or\n    });\n    return this;\n  }\n\n  likeOR(field, query, type) {\n    this.like(field, query, type, true);\n    return this;\n  }\n\n  join(table, on, type = '') {\n    this._join.push({\n      table: table,\n      on: on,\n      type: type.toUpperCase(type)\n    });\n    return this;\n  }\n\n  limit(start, limit) {\n    this._limit = [start, limit];\n    return this;\n  }\n\n  orderBy(orderFields, order = 'ASC') {\n    this._orderBy = [orderFields, order];\n    return this;\n  }\n\n  groupBy(fields) {\n    this._groupBy = fields;\n    return this;\n  }\n\n  executeLastQuery() {\n    var queries = Object.keys(this.queries);\n    var lastQueryKey = queries;\n    this.queries[lastQueryKey].executed = 1;\n    return this.lastQuery();\n  }\n\n  build() {\n    if(this._queryType === TYPE_SELECT){\n      return this.buildSelectSQL();\n    }\n\n    if(this._queryType === TYPE_INSERT){\n      return this.buildInsertSQL();\n    }\n\n    if(this._queryType === TYPE_UPDATE){\n      return this.buildUpdateSQL();\n    }\n\n    if(this._queryType === TYPE_DELETE){\n      return this.buildDeleteSQL();\n    }\n\n    return Error(\"Query type is not supported\");\n  }\n\n  afterBuild(SQL){\n    SQL += ';';\n\n    this.setQuery(SQL);\n    this.resetQueryParams();\n    return SQL;\n  }\n\n  buildInsertSQL(){\n    const keys = this._fields.map( key => ( '`' + key + '`' ) ).join(',');\n    const values = this._fields.map( key => ( '\\'' + this._values[key] + '\\'' ) ).join(',');\n    let SQL = 'INSERT INTO ' + this._table + '(' + keys + ') VALUES (' + values + ')';\n    return this.afterBuild(SQL);\n  }\n\n  buildUpdateSQL(){\n    const where = this.buildWhere();\n    let SQL = \"UPDATE \" + this._table + \" SET \";\n    let _set = [];\n    for( let key in this._values){\n      if (!this._values.hasOwnProperty(key)) {\n        continue;\n      }\n      _set.push('`' + key + '`=\\'' + this._values[key] + '\\'');\n    }\n    SQL += _set.join(',');\n    SQL += \" WHERE \" + where;\n    return this.afterBuild(SQL);\n  }\n\n  buildDeleteSQL(){\n    let SQL = \"DELETE FROM \" + this._table + \" WHERE \" + this.buildWhere();\n    return this.afterBuild(SQL);\n  }\n\n  buildSelectSQL() {\n    let params = this.collectParams();\n    let where = \"\";\n\n    if (this._where !== null || this._like !== null) {\n      where = this.buildWhere() + this.buildLike();\n      if( where){\n        where = \" WHERE \" + where;\n      }\n    }\n\n    this.checkLimit();\n\n    let SQL =\n      \"SELECT \" + params.fields + \" \" +\n        \"FROM \" + params.from +\n        this.buildJoin() +\n        where +\n        this.buildOrderBy() +\n        this.buildGroupBy() +\n        this.buildLimit();\n\n    return this.afterBuild(SQL);\n  }\n\n  buildWhere() {\n    let SQL = \"\";\n    if (this._where.length > 0) {\n      for (var i in this._where) {\n        if (!this._where.hasOwnProperty(i)) {\n          continue;\n        }\n\n        let expression = this._where[i];\n        let expressionValue = '';\n\n        if (SQL !== \"\") {\n          if (expression.or) {\n            SQL += \" OR \";\n          } else {\n            SQL += \" AND \";\n          }\n        }\n\n        var sign = \"=\";\n        if (expression.key.indexOf('!=') !== -1) {\n          sign = \"!=\";\n          expression.key = expression.key.replace('!=', '').trim();\n        }\n\n        if (typeof expression.value === 'object') {\n          sign = \" IN \";\n          for (var key in expression.value) {\n            if (!this._where.hasOwnProperty(i)) {\n              continue;\n            }\n            let value = expression.value[key];\n            expressionValue = value;\n            if (typeof value === \"number\") {\n\n            } else {\n              expression.value[key] = \"'\" + value + \"'\";\n            }\n          }\n          expressionValue = \"(\" + expression.value.join(',') + \")\";\n        } else if (typeof expression.value === \"number\") {\n          expressionValue = expression.value;\n        } else {\n          expressionValue = \"'\" + expression.value + \"'\";\n        }\n\n        SQL += '`' + expression.key + '`' + sign + expressionValue;\n      }\n    }\n\n    return SQL;\n  }\n\n  buildLike() {\n    let SQL = \"\";\n    if (this._like) {\n      for (var i in this._like) {\n        if (!this._where.hasOwnProperty(i)) {\n          continue;\n        }\n        let expression = this._like[i];\n\n        if (SQL !== \"\") {\n          if (expression.or) {\n            SQL += \" OR \";\n          } else {\n            SQL += \" AND \";\n          }\n        }\n        let value = \"\";\n        if (expression.type === 'before' || expression.type === 'both') {\n          value = \"%\";\n        }\n        value += expression.query;\n\n        if (expression.type === 'after' || expression.type === 'both') {\n          value += \"%\";\n        }\n\n        SQL += \"{expression['field']} LIKE '\" + value + \"'\";\n      }\n      if (this._where) {\n        SQL = \" AND \" + SQL;\n      }\n    }\n\n    return SQL;\n  }\n\n  buildJoin() {\n    let SQL = \" \";\n    if (this._join) {\n      for (var i in this._join) {\n        if (!this._where.hasOwnProperty(i)) {\n          continue;\n        }\n        let expression = this._join[i];\n        SQL += expression.type +\n          \" JOIN \" + expression.table +\n          \" ON \" + expression.on;\n      }\n    }\n    return SQL;\n  }\n\n  checkLimit(){\n    if( !this._limit){\n      this.limit(0, DEFAULT_LIMIT);\n    }\n  }\n\n  buildLimit() {\n    if (this._limit) {\n      return \" LIMIT \" + this._limit[0] + \", \" + this._limit[1];\n    }\n    return \"\";\n  }\n\n  buildOrderBy() {\n    if (this._orderBy) {\n      return \" ORDER BY \" + this._orderBy[0] + \" \" + this._orderBy[1];\n    }\n    return \"\";\n  }\n\n  buildGroupBy() {\n    if (this._groupBy) {\n      return \" GROUP BY \" + this._groupBy;\n    }\n    return \"\";\n  }\n\n  collectParams() {\n    let from = this._table;\n    if (!from) {\n      throw Error(\"You need to specify table\");\n    }\n\n    let fields = this._fields;\n    if (fields === null) {\n      fields = this.getTableFields(from);\n    }\n    if (typeof fields !== 'string') {\n      fields = fields.join(',');\n    }\n    return {\n      from: from,\n      fields: fields,\n      where: this._where,\n      join: this._join\n    };\n  }\n\n  getTableFields(table) {\n    let tableArr = table.split('as');\n    let prefix = (tableArr[1]) ? tableArr[1] : tableArr[0];\n    this._fields = [prefix + '.*'];\n    return this._fields;\n  }\n\n  getDbQuery() {\n    return this.dbQuery;\n  }\n\n  setDbQuery(dbQuery) {\n    this.dbQuery = dbQuery;\n    return this;\n  }\n\n  setQuery(SQL, executed = false) {\n    this.queries.push({\n      query: SQL, executed: executed, queryTime: 0\n    });\n  }\n\n  resetQueryParams() {\n    this._where = [];\n    this._table = null;\n    this._join = [];\n    this._fields = null;\n    this._values = null;\n    this._orderBy = null;\n    this._groupBy = null;\n    this._queryType = null;\n    this._limit = null;\n    this._like = null;\n  }\n}\n\nmodule.exports = new MySQLQueryBuilder();\n"]}